@model CreatePhotoShootDTO

@{

    List<DateTime> remainingDates = Model.RemainingDates ?? new();
    Dictionary<DateOnly, IEnumerable<TimeSlot>> calendar = Model.Calendar ?? new();
}

<input type="hidden" id="priceForDistance"/>
<div class="container">
    
    <form asp-action="Reserve" method="post">
        <div asp-validation-summary="All" class="text-danger"></div>

        <input type="hidden" asp-for="IdentityUserId" />
        <input type="hidden" asp-for="ReservationDate" />
        <input type="hidden" asp-for="ReservationTime" />
        <div class="row bg-light mt-3">
            <div class="col-12 p-1">
                <h4>Вашите данни</h4>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-12 col-md-6 col-lg-3 form-group">
                <label asp-for="PersonFirstName"></label>
                <input asp-for="PersonFirstName" class="form-control" required />
                <span asp-validation-for="PersonFirstName" class="text-danger"></span>
            </div>
            <div class="col-12 col-md-6 col-lg-3 form-group">
                <label asp-for="PersonLastName"></label>
                <input asp-for="PersonLastName" class="form-control" required />
                <span asp-validation-for="PersonLastName" class="text-danger"></span>
            </div>
            <div class="col-12 col-md-6 col-lg-3 form-group">
                <label asp-for="PersonPhone"></label>
                <input asp-for="PersonPhone" class="form-control" required />
                <span asp-validation-for="PersonPhone" class="text-danger"></span>
            </div>
            <div class="col-12 col-md-6 col-lg-3 form-group">
                <label asp-for="PhotoShootType"></label>
                <select asp-for=PhotoShootType asp-items="@Html.GetEnumSelectList<PhotoShootType>()" class="form-control" required></select>
                <span asp-validation-for="PhotoShootType" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <!--<div class="col-12 col-md-6 col-lg-3 form-group">
                <label asp-for="ReservationDate"></label>
                <input asp-for="ReservationDate" class="form-control" />
                <span asp-validation-for="ReservationDate" class="text-danger"></span>
            </div>-->
            <div class="col-12 col-md-6 col-lg-3 form-group" id="photo-shoot-type-description">
                <label asp-for="PhotoShootTypeDescription"></label>
                <textarea asp-for="PhotoShootTypeDescription" cols="20" rows="10" class="form-control"></textarea>
                <span asp-validation-for="PhotoShootTypeDescription" class="text-danger"></span>
            </div>
        </div>
        <div class="row bg-light mt-3">
            <div class="col-12 p-1">
                <h4>Място</h4>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-12 col-md-6 col-lg-4 form-group is-decided-by-us">
                <input asp-for="IsDecidedByUs" />
                <label asp-for="IsDecidedByUs"></label>
            </div>
        </div>
        <div class="row mt-3 row-decided-by-us-info" style="display:none">
            <div class="col-12">
                <h6>Ще изберем подходящо място в областта, която сте избрали, и ще се свържем допълнително с вас за повече информация.</h6>
            </div>
        </div>
        <div class="place-container">
            <div class="row mt-3">
                <div class="col-12 col-md-6 col-lg-6 form-group">
                    <label for="Region">Област</label>
                    <input type="hidden" id="RegionId" />
                    <select id="Region" class="form-control" asp-items="@(new SelectList(Model.ServicedRegions, "Id", "Name"))" required>
                        <option value="0" selected></option>
                    </select>
                </div>
                <div class="col-12 col-md-6 col-lg-6 form-group settlement" style="display:none">
                    <label for="Settlement">Населено място</label>
                    <input type="hidden" id="SettlementId" />
                    <input id="Settlement" class="form-control" required />
                </div>
            </div>
            <div class="place-addition-info">
                <div class="row">
                    <div class="col-12 form-group user-place" style="display:none">
                        <label asp-for="UserPlace"></label>
                        <input asp-for="UserPlace" class="form-control" />
                    </div>
                </div>
                <div class="row">

                    <div class="col-12 form-group google-maps-link" style="display:none">
                        <label asp-for="GoogleMapsLink"></label>
                        <input asp-for="GoogleMapsLink" class="form-control" />
                        <br />
                        <span><i>По избор, но силно препоръчително :)</i></span>
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="col-12 col-md-6 col-lg-6 col-price" style="display:none">
                    <label><b>Разход за пътни</b></label>
                    <br />
                    <p id="priceDesciption">Тъй като избраното населено масто се намира на разстояние по-голямо от 20 км от нас, това ще ви струва допълнителни <b><i><span id="price"></span></i></b>лв (<i>изчислява се на км</i>).</p>
                </div>
            </div>
        </div>
        <div class="dates-container" style="display:none">
            <div class="row bg-light mt-3">
                <div class="col-12 p-1">
                    <h4>Дата и час</h4>
                </div>
            </div>
            <div class="row mt-5">
                @for (int i = 0; i < 3; i++)
                {
                    <div class="col-12 col-md-6 col-lg-4 mx-auto">
                        <div class="card card-weather text-center mx-auto btn-date btn-date-weather">
                            <div class="card-header">
                                <h6>@remainingDates[i].ToString("dd.MM")</h6>
                            </div>
                            <div class="card-body card-body-weather text-center">
                                <h5 class="temperatureCurrent"></h5>
                                <div class="icon"></div>
                                <p class="forecastText">Нямаме информация за времето :(</p>
                                @*<p class="precipitation"></p>*@
                            </div>
                            <div class="card-footer  text-center">
                                Busy
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row mt-5">
                <div class="col-12 scrollmenu" id="dates-list">
                    <div id="date-buttons-slider">
                        @for (int i = 3; i < remainingDates.Count; i++)
                        {
                            <div class="card text-center btn-date btn-date-simple" id="date-button-simple">
                                <div class="card-header">
                                    <h6>@remainingDates[i].ToString("dd.MM")</h6>
                                </div>
                                <div class="card-body text-center">
                                    Busy
                                </div>
                            </div>

                            @*<button type="button" class="btn-date">
                        <b>@remainingDates[i].ToString("dd.MM")</b>
                        <hr />
                        <p><span class="temperatureCurrent">0</span>C°</p>
                        <p><span class="forecastText"></span></p>
                        <p>Precipitation:<span class="precipitation"> 0</span>%</p>
                        </button>*@
                        }
                    </div>


                </div>
                <div class="row">
                    <div class="col-12 hours-container" id="hours-container" style="display:none">
                        <hr />
                        @foreach (TimeSlot slot in Model?.AllTimeSlots ?? throw new NullReferenceException("Time slots are null"))
                        {
                            <button type="button" class="btn @(slot.IsAvailable ? "btn-success" : "btn-secondary") btn-sm btn-time-slot" id="time-slot">
                                @(slot.Time.Hour < 10 ? $"0{slot.Time.Hour}" : slot.Time.Hour):@(slot.Time.Minute == 0 ? "00" : "30");
                            </button>
                        }
                    </div>
                </div>
                <div class="row row-total-price mt-5">
                    <div class="col-12 text-center">
                        <input type="hidden" asp-for="Price"/>
                        <h3>Цена</h3>
                        <h1 class="mt-2"><span id="total-price"></span> лв</h1>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-5">
            <div class="col-12 text-center">
                <button type="submit" class="btn btn-outline-secondary btn-lg" id="btn-book" disabled>Резервирай</button>
            </div>
        </div>
    </form>
</div>

    

<style>
    .is-decided-by-us{
        margin-left: 40px;
        transform: scale(1.2);
    }
    #dates-list {
        overflow: scroll;
    }

    #date-buttons-slider {
        position: relative;
        display: flex;
        flex-flow: row nowrap;
        padding: 10px;
    }

    #date-button-simple, .btn-date-weather {
        flex: 0 0 auto;
        background: #f2f2f2;
        color: #1a1a1a;
        margin-right: 10px;
        border: none;
        border-radius: 10px;
        box-shadow: 0px 0px 10px -2px #8cb0db;
        transform: unset;
        transition: .4s;
    }

    #date-button-simple {
        min-height: 100px;
    }
    
    .btn-date-weather {
        max-width: 300px;
        min-height: 300px;
    }

    #date-button-simple:hover, .btn-date-weather:hover {
        box-shadow: 0px 0px 10px 2px #394859;
        transform: scale(1.02);
        transition: .4s;
    }

    .hours-container{
        padding: 20px;
    }

    .hours-container button {
        margin: 5px;
    }

    .btn-date-weather .card-body .icon {
        background-repeat: no-repeat;
        background-position: center;
        height: 50px;
        width: 80px;
        margin: 10px auto;
    }

    .ui-autocomplete{
        font-family: "Helvetica";
        border-radius: 2px;
        border: none;
        background: #fff;
        transition: .2s;
        box-shadow: 0px 0px 10px -2px #394859;
        padding: 5px;

    }

    .ui-menu-item-wrapper{
        color: #1a1a1a;
        font-weight: normal;
    }

    .ui-menu-item-wrapper:hover{
        font-weight: normal;
        color: #1a1a1a;
        background: #f7f7f7;
        border:none;
    }

</style>

<script>
    $(document).ready(function(){
        $("#IsDecidedByUs").change(function () {
            if (this.checked) {
                $(".row-decided-by-us-info").css("display", "block");
                $(".dates-container").css("display", "block");
            }
            else {
                $(".row-decided-by-us-info").css("display", "none");
                $(".dates-container").css("display", "unset");
            }
        });

        $("#Region").change(function () {
            getSettlementsByRegion($("#Region option:selected").text());
            $(".settlement").css("display", "block");
        })

        $("#Settlement").change(function () {
            calculatePriceByDistance($(this).val());
            getForecast($(this).val());
            $(".dates-container").css("transition", ".4s");
            $(".dates-container").css("display", "block");
            if ($("#IsDecidedByUs").checked == false){
                $(".user-place").css("display", "block");
                $(".google-maps-link").css("display", "block");
            }
        });

        $(".card-weather").click(function () {
            $(".card-weather").css("box-shadow", "unset")
            $(".btn-date-simple").css("background", "unset");
            $(".btn-date-simple").css("color", "unset");
            $(this).css("box-shadow", "0px 0px 15px 2px #6cab65")
        });

        $(".btn-date").click(function () {
            showTimeSlots($(this).find(".card-header h6").html());
        });

        $(document).on("click", ".btn-date", function () {
            $(".reservation-time").css("display", "block");
            
        });

        $(".btn-time-slot")

        $(document).on("click", ".btn-time-slot", function (event) {
            event.preventDefault();
            if ($(this).hasClass("btn-success")) {
                $("#ReservationTime").val($(this).text());
                $("#btn-book").prop("disabled", false);
            }

            else {
                $("#btn-book").prop("disabled", true);
            }
        });

        
        setDate();
        
        //hide description
        $("#photo-shoot-type-description").css("display", "none");

        $("#PhotoShootType").change(function () {
            let option = $('#PhotoShootType').find(":selected").val();

            //7 is {Other}
            if (option == 7) {
                $("#photo-shoot-type-description").css("display", "block");
            }

            else{
                $("#photo-shoot-type-description").css("display", "none");
            }
        });

        $("#PhotoShootType").change(function () {
            checkPhotoShootTypeDescriptionEmpty();
        });
    });;

    

    function setDate(){
        $(".btn-date-simple").click(function () {
            let currentDate = new Date();
            let selectedDay = formatSelectedDate($(this).text());
            $('input[name="ReservationDate"]').val(selectedDay);
            $(".btn-date").each(function () {
                $(this).css("background", "unset");
                $(this).css("color", "unset");
            });
            $(this).css("background", "#a2cc93");
            $(this).css("color", "#fff");
            $(".card-weather").css("box-shadow", "unset");

        });
    }

    function formatSelectedDate(selectedDate) {
        let selectedDateSplit = selectedDate.split('.');
        return `${new Date().getUTCFullYear()}-${selectedDateSplit[1]}-${selectedDateSplit[0]}`;
    }

    function showTimeSlots(selectedDate){

        let selectedDateFormated = formatSelectedDate(selectedDate);
        let calendar = @Html.Raw(Json.Serialize(calendar));
        let timeSlots = $(".btn-time-slot");
        let isAvailable = false;
        let time = '';
        let timeSubstring = '';

        $('#hours-container').empty();
        $('#hours-container').css("display", "block");
        for (let i = 0; i < calendar[selectedDateFormated]?.length; i++) {
            isAvailable = calendar[selectedDateFormated][i]?.isAvailable;
            time = calendar[selectedDateFormated][i]?.time;
            timeSubstring = time.substring(0, time.length - 3);
            
            $('#hours-container').append(`<button class='btn btn-${isAvailable ? 'success' : 'danger'} btn-sm btn-time-slot'>${timeSubstring}</button>`);
        }
    }

    function formatTimeOnly(timeOnlyList){
        let timeOnlyListFormated = [];

        for(let i = 0; i < timeOnlyList.length; i++){
            timeOnlyListFormated.push(timeOnlyList[i].slice(0, -3))
        }

        return timeOnlyListFormated;
    }

    function checkPhotoShootTypeDescriptionEmpty(){
        let selected = $('#PhotoShootType').find(":selected").val();

        //7 is "Other"
        if (selected == 7) {
            $("#PhotoShootTypeDescription").prop("required", true);
        }
    }

    function getWeather(settlement){
        var request = $.ajax({
            url: "@Url.Action("currentWeather", "Weather")",
            method: "GET",
            data: { settlement: settlement },
            success: function (response) {
                let json = JSON.parse(JSON.stringify(response));
                console.log(json);
                $(".forecastText").html(json.current.condition.text);
                $(".temperatureCurrent").html(Math.round(json.current.temperature));
                //$(".precipitation").html(' ' + json.current.precipitation);
            },
            error:function(response){
                console.log("error");
                console.log(response);
            }
        });
    }

    function getForecast(settlement) {
        var request = $.ajax({
            url: "@Url.Action("forecast", "Weather")",
            method: "GET",
            data: { settlement: settlement },
            success: function (response) {
                let json = JSON.parse(JSON.stringify(response));
                $(".card-weather").each(function (i) {
                    let cardBody = $(this).find(".card-body-weather");
                    cardBody.find(".icon").css("background-image", `url(${json.forecast.forecastDays[i].day.condition.icon})`);
                    cardBody.find("h5").text(json.forecast.forecastDays[i].day.averageTemperature != 0 ? (Math.round(json.forecast.forecastDays[i].day.averageTemperature) + 'C°') : '');
                    cardBody.find(".forecastText").text(json.forecast.forecastDays[i].day.condition.text);
                    //cardBody.find(".precipitation").text('Precipitation: ' + json.forecast.forecastDays[i].day.totalPrecipitation + '%');
                    i++;
                });
            },
            error: function (response) {
                console.log("error");
                console.log(response);
            }
        });
    }

    /*function getAutocomplete(query) {
        var request = $.ajax({
            url: "@Url.Action("autocomplete", "Weather")",
            method: "GET",
            data: { query: query },
            success: function (response) {
                $("#Settlement").autocomplete({
                    source: response.map(r => r.name)
                });
                return response;
            },
            error: function (response) {
                console.log("error");
                console.log(response);
            }
        });
    }*/

    function getSettlementsByRegion(region) {
        var request = $.ajax({
            url: "@Url.Action("settlementsByRegion", "Settlement")",
            method: "GET",
            data: { region: region },
            success: function (response) {
                $("#Settlement").autocomplete({
                    source: response.map(r => r.nameLatin)
            });
            
            return response;
            },
            error: function (response) {
                console.log("error");
                console.log(response);
            }
        });
    }

    function calculatePriceByDistance(settlement) {
        let price = 0;
        let region = $("#Region").find(":selected").text();
        let settlementData = [region, settlement];
        var request = $.ajax({
            contentType: 'application/json',
            url: "@Url.Action("fuelPrice", "Calculations")",
            traditional: true,
            method: "GET",
            data: { 'settlementData': settlementData },
            success: function (response) {
                calculateTotalPrice($("#PhotoShootType").find(":selected").val(), response)
                $("#price").html(response);
                $(".col-price").css("display", "block");
            },
            error: function (response) {
                console.log("error");
                console.log(response);
            }
        });
    }

    function calculateTotalPrice(photoshootType, fuelPrice){
        var request = $.ajax({
            contentType: 'application/json',
            url: "@Url.Action("photoshootPrice", "Calculations")",
            traditional: true,
            method: "GET",
            data: { 'photoshootType': photoshootType, 'fuelPrice': fuelPrice },
            success: function (response) {
                price = response;
                $("#Price").val(response);
                $("#total-price").html(response);
                $(".row-total-price").css("display", "block");
            },
            error: function (response) {
                console.log("error");
                console.log(response);
            }
        });
    }
</script>